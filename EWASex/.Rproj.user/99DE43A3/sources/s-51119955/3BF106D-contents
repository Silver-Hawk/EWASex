---
title: "EWASex - An R-package to predict sex directly from EWAS data"
author: "Jesper Beltoft Lund"
date: "`r Sys.Date()`"
output: 
  rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{EWASex}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

## Introduction

`EWASex` is a light-weight R-package for gender prediction based on methylation profiles sampled with the Illumina Infinum 450K Human BeadChip array.  

The package contains a main function `EWASex.predict`, that performs the whole set of analysis needed to perform the predictions. Additionally, more information is availabe by running the following commands after instalation: 


    ?EWASex.predict
    ?EWASex.train
    ?EWASex.getGoldCpGNames
    
Data for means and standard deviation is available by running (which is used in the case of datasets that doesn't contain gender information or contain spurious gender labels):

    data(MeansAndSD49)

## Tutorials

After installing the `EWASex` (see the github page for information about this), use the following code to predict and plot the results of the typical workflow.

Prior to this step, you should have a data.frame with normalized beta.values, see the `minfi` R-package for help on how to do this is if you have RAW data.

#### Example (Predicting genders using GSE68777)

    #
    # We will use Bioconductor's BiocManager package to install the required packages see: https://www.bioconductor.org/install/
    #
    if (!requireNamespace("BiocManager", quietly = TRUE))
      install.packages("BiocManager", update =F)
    
    # Install GEOquery and minfi
    BiocManager::install("GEOquery", update = F)
    BiocManager::install("minfi", update =F)
    
    # Install these packages if you need to normalize 450K samples
    BiocManager::install("IlluminaHumanMethylation450kmanifest", update =F)
    BiocManager::install("IlluminaHumanMethylation450kanno.ilmn12.hg19", update =F)
    # Install these packages if you need to normalize 850K samples
    BiocManager::install("IlluminaHumanMethylationEPICmanifest", update=F)
    BiocManager::install("IlluminaHumanMethylationEPICanno.ilm10b4.hg19", update =F)
    
    # Use devtools to install EWASex
    devtools::install_github("Silver-Hawk/EWASex/EWASex")
    
    # Load the libraries
    library("GEOquery")
    library("minfi")
    library("EWASex")
    
    # Change the working directory to the directory of your choice
    setwd("C:/Users/Lund/Downloads")
    
    # For this tutorial we will use the smaller GSE68777 blood-based 450K dataset (N=40)
    # The dataset consists of 14 males and 26 females,
    # Of which, 20 were hospitalized with acute mania and 20 are controls
    GEO_ID = "GSE68777"
    
    # download
    supp = GEOquery::getGEOSuppFiles(GEO_ID)
    GSE = getGEO(GEO_ID)
    
    # unzipping
    untar(tarfile = paste0(GEO_ID,"/",GEO_ID,"_RAW.tar"), exdir = GEO_ID)
    idat_files <- list.files(pattern = 'idat.gz', path = GEO_ID)
    for(i in 1:length(idat_files)){
      gunzip(filename = paste(GEO_ID,idat_files[i],sep="/"), destname = paste(GEO_ID,gsub("[.]gz$", "", idat_files[i]),sep="/"), overwrite = T)
    }
    
    # get annotation file
    anno = pData(GSE[[1]])
    
    # get beta-values without applaying normalization
    RGset <- read.metharray.exp(paste0('./',GEO_ID,'/'), force = T)
    MSet <- preprocessRaw(RGset)
    BetaMatrix <- getBeta(MSet, type = 'Illumina')
    
    #
    # Do prediction using EWASex
    #
    data("MeansAndSD49")
    
    # Use beta matrix
    df <- BetaMatrix
    
    # Subset to only use the 49 best CpGs
    df <- df[rownames(df) %in% getGoldCpGNames(),]
    
    # Do prediction
    preds <- getPredictions(df = df, means = MeansAndSD49, margin = 1)
    preds <- EWASex.predict(df = df, means = EWASex.train(anno$`Sex:ch1`, df), margin = 1)
    
    # Get a vector with names matching those of the EWASex prediction
    sex_col = ifelse(anno$`Sex:ch1` == "Female", "female", "male")
    sex_col = anno$`Sex:ch1`#ifelse(anno$`Sex:ch1` == "Female", "female", "male")
    
    # Get the accuracy/fraction of correct predictions
    accuracy = sum(preds$predictedGender == sex_col) / nrow(anno)
    
    # print the percentage of correctly predicted genders
    print(paste0(accuracy*100, "% of the samples were correctly predicted by EWASex."))
    
It is possible to see the output of the getPredictions function by using the `head` function. Here we also add the actual gender to the results from the phenotype file.

    preds$Sex = sex_col # add sex labels to the results for comparison
    head(predictions, 10)  # prints the top 10 table rows
    
```{r, echo=FALSE, results='asis', fig.cap='prediction output'}
precompiled_preds <- read.csv("allPredictionsForVignette.csv")
knitr::kable(head(precompiled_preds, 10))
```

## References and citing

The study hasn't been published yet.
